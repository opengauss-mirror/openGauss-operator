//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (c) 2021 opensource@cmbc.com.cn
OpenGauss Operator is licensed under Mulan PSL v2.
You can use this software according to the terms and conditions of the Mulan PSL v2.
You may obtain a copy of Mulan PSL v2 at:
         http://license.coscl.org.cn/MulanPSL2
THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
See the Mulan PSL v2 for more details.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpNodeEntry) DeepCopyInto(out *IpNodeEntry) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpNodeEntry.
func (in *IpNodeEntry) DeepCopy() *IpNodeEntry {
	if in == nil {
		return nil
	}
	out := new(IpNodeEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenGaussCluster) DeepCopyInto(out *OpenGaussCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenGaussCluster.
func (in *OpenGaussCluster) DeepCopy() *OpenGaussCluster {
	if in == nil {
		return nil
	}
	out := new(OpenGaussCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenGaussCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenGaussClusterCondition) DeepCopyInto(out *OpenGaussClusterCondition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenGaussClusterCondition.
func (in *OpenGaussClusterCondition) DeepCopy() *OpenGaussClusterCondition {
	if in == nil {
		return nil
	}
	out := new(OpenGaussClusterCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenGaussClusterList) DeepCopyInto(out *OpenGaussClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OpenGaussCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenGaussClusterList.
func (in *OpenGaussClusterList) DeepCopy() *OpenGaussClusterList {
	if in == nil {
		return nil
	}
	out := new(OpenGaussClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OpenGaussClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenGaussClusterSpec) DeepCopyInto(out *OpenGaussClusterSpec) {
	*out = *in
	if in.IpList != nil {
		in, out := &in.IpList, &out.IpList
		*out = make([]IpNodeEntry, len(*in))
		copy(*out, *in)
	}
	if in.RemoteIpList != nil {
		in, out := &in.RemoteIpList, &out.RemoteIpList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.Schedule = in.Schedule
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenGaussClusterSpec.
func (in *OpenGaussClusterSpec) DeepCopy() *OpenGaussClusterSpec {
	if in == nil {
		return nil
	}
	out := new(OpenGaussClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenGaussClusterStatus) DeepCopyInto(out *OpenGaussClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]OpenGaussClusterCondition, len(*in))
		copy(*out, *in)
	}
	in.Spec.DeepCopyInto(&out.Spec)
	if in.PodState != nil {
		in, out := &in.PodState, &out.PodState
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SyncStates != nil {
		in, out := &in.SyncStates, &out.SyncStates
		*out = make([]SyncState, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenGaussClusterStatus.
func (in *OpenGaussClusterStatus) DeepCopy() *OpenGaussClusterStatus {
	if in == nil {
		return nil
	}
	out := new(OpenGaussClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleConfig) DeepCopyInto(out *ScheduleConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleConfig.
func (in *ScheduleConfig) DeepCopy() *ScheduleConfig {
	if in == nil {
		return nil
	}
	out := new(ScheduleConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncState) DeepCopyInto(out *SyncState) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncState.
func (in *SyncState) DeepCopy() *SyncState {
	if in == nil {
		return nil
	}
	out := new(SyncState)
	in.DeepCopyInto(out)
	return out
}
